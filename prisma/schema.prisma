datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  hashedPassword  String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  phone           String?
  address         String?
  accounts        Account[]
  sessions        Session[]
  admin           Boolean   @default(false)
}

model Categories {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
}

model MenuItems {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  price           Int
  image           String?
}

model VerificationToken {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}